<?php
/**
 * PublicBewerberReadOnlyDto
 *
 * PHP version 5
 *
 * @category Class
 * @package  Prosoft\RecruitingApi\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * prosoftrecruiting API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.3
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
namespace Prosoft\RecruitingApi\Api\Dto;

use ArrayAccess;
use Prosoft\RecruitingApi\Api\ObjectSerializer;

/**
 * PublicBewerberReadOnlyDto Class Doc Comment
 *
 * @category    Class
 * @description Implementiert Methoden und Eigenschaften fÃ¼r die Ã¶ffentlichen Mitarbeiter-Daten
 * @package     Prosoft\RecruitingApi\Api
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class PublicBewerberReadOnlyDto implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
     * The original name of the model.
     *
     * @var string
     */
    protected static $swaggerModelName = 'PublicBewerberReadOnlyDto';

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @var string[]
     */
    protected static $swaggerTypes = [
        'adresse_hausnummer'         => 'string',
        'adresse_land'               => '\Prosoft\RecruitingApi\Api\Dto\LookupDto',
        'adresse_ort'                => 'string',
        'adresse_plz'                => 'string',
        'adresse_strasse'            => 'string',
        'anrede'                     => '\Prosoft\RecruitingApi\Api\Dto\LookupDto',
        'arbeitserlaubnis_bis'       => '\DateTime',
        'aufenthaltserlaubnis_bis'   => '\DateTime',
        'avatar'                     => '\Prosoft\RecruitingApi\Api\Dto\AvatarReadOnlyDto',
        'bevorzugter_kanal'          => '\Prosoft\RecruitingApi\Api\Dto\LookupDto',
        'bewerbungen'                => '\Prosoft\RecruitingApi\Api\Dto\BewerbungReadOnlyDto[]',
        'dateien'                    => '\Prosoft\RecruitingApi\Api\Dto\MitarbeiterDateiReadOnlyDto[]',
        'email'                      => 'string',
        'familienstand'              => '\Prosoft\RecruitingApi\Api\Dto\LookupDto',
        'fax'                        => 'string',
        'geburtsdatum'               => '\DateTime',
        'geburtsname'                => 'string',
        'geburtsort'                 => 'string',
        'is_embargo_checked'         => 'bool',
        'ist_ehemaliger_mitarbeiter' => 'bool',
        'ist_interner_mitarbeiter'   => 'bool',
        'ist_pool_mitarbeiter'       => 'bool',
        'kommunikationen'            => '\Prosoft\RecruitingApi\Api\Dto\KommunikationReadOnlyDto[]',
        'mitarbeiter_status'         => 'int',
        'mobil'                      => 'string',
        'nachname'                   => 'string',
        'namensvorsatz'              => 'string',
        'namenszusatz'               => 'string',
        'nationalitaet'              => '\Prosoft\RecruitingApi\Api\Dto\LookupDto',
        'profile'                    => '\Prosoft\RecruitingApi\Api\Dto\MitarbeiterProfilReadOnlyDto[]',
        'skills'                     => '\Prosoft\RecruitingApi\Api\Dto\MitarbeiterSkillReadOnlyDto[]',
        'telefon'                    => 'string',
        'titel'                      => '\Prosoft\RecruitingApi\Api\Dto\LookupDto',
        'url_facebook'               => 'string',
        'url_google_plus'            => 'string',
        'url_linked_in'              => 'string',
        'url_twitter'                => 'string',
        'url_xing'                   => 'string',
        'vorname'                    => 'string',
        'webseite'                   => 'string',
        'weitere_vornamen'           => 'string',
        'werdegaenge'                => '\Prosoft\RecruitingApi\Api\Dto\MitarbeiterWerdegangReadOnlyDto[]',
        'object_uuid'                => 'string',
    ];

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @var string[]
     */
    protected static $swaggerFormats = [
        'adresse_hausnummer'         => null,
        'adresse_land'               => null,
        'adresse_ort'                => null,
        'adresse_plz'                => null,
        'adresse_strasse'            => null,
        'anrede'                     => null,
        'arbeitserlaubnis_bis'       => 'date-time',
        'aufenthaltserlaubnis_bis'   => 'date-time',
        'avatar'                     => null,
        'bevorzugter_kanal'          => null,
        'bewerbungen'                => null,
        'dateien'                    => null,
        'email'                      => null,
        'familienstand'              => null,
        'fax'                        => null,
        'geburtsdatum'               => 'date-time',
        'geburtsname'                => null,
        'geburtsort'                 => null,
        'is_embargo_checked'         => null,
        'ist_ehemaliger_mitarbeiter' => null,
        'ist_interner_mitarbeiter'   => null,
        'ist_pool_mitarbeiter'       => null,
        'kommunikationen'            => null,
        'mitarbeiter_status'         => 'int32',
        'mobil'                      => null,
        'nachname'                   => null,
        'namensvorsatz'              => null,
        'namenszusatz'               => null,
        'nationalitaet'              => null,
        'profile'                    => null,
        'skills'                     => null,
        'telefon'                    => null,
        'titel'                      => null,
        'url_facebook'               => null,
        'url_google_plus'            => null,
        'url_linked_in'              => null,
        'url_twitter'                => null,
        'url_xing'                   => null,
        'vorname'                    => null,
        'webseite'                   => null,
        'weitere_vornamen'           => null,
        'werdegaenge'                => null,
        'object_uuid'                => 'uuid',
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'adresse_hausnummer'         => 'AdresseHausnummer',
        'adresse_land'               => 'AdresseLand',
        'adresse_ort'                => 'AdresseOrt',
        'adresse_plz'                => 'AdressePlz',
        'adresse_strasse'            => 'AdresseStrasse',
        'anrede'                     => 'Anrede',
        'arbeitserlaubnis_bis'       => 'ArbeitserlaubnisBis',
        'aufenthaltserlaubnis_bis'   => 'AufenthaltserlaubnisBis',
        'avatar'                     => 'Avatar',
        'bevorzugter_kanal'          => 'BevorzugterKanal',
        'bewerbungen'                => 'Bewerbungen',
        'dateien'                    => 'Dateien',
        'email'                      => 'Email',
        'familienstand'              => 'Familienstand',
        'fax'                        => 'Fax',
        'geburtsdatum'               => 'Geburtsdatum',
        'geburtsname'                => 'Geburtsname',
        'geburtsort'                 => 'Geburtsort',
        'is_embargo_checked'         => 'IsEmbargoChecked',
        'ist_ehemaliger_mitarbeiter' => 'IstEhemaligerMitarbeiter',
        'ist_interner_mitarbeiter'   => 'IstInternerMitarbeiter',
        'ist_pool_mitarbeiter'       => 'IstPoolMitarbeiter',
        'kommunikationen'            => 'Kommunikationen',
        'mitarbeiter_status'         => 'MitarbeiterStatus',
        'mobil'                      => 'Mobil',
        'nachname'                   => 'Nachname',
        'namensvorsatz'              => 'Namensvorsatz',
        'namenszusatz'               => 'Namenszusatz',
        'nationalitaet'              => 'Nationalitaet',
        'profile'                    => 'Profile',
        'skills'                     => 'Skills',
        'telefon'                    => 'Telefon',
        'titel'                      => 'Titel',
        'url_facebook'               => 'UrlFacebook',
        'url_google_plus'            => 'UrlGooglePlus',
        'url_linked_in'              => 'UrlLinkedIn',
        'url_twitter'                => 'UrlTwitter',
        'url_xing'                   => 'UrlXing',
        'vorname'                    => 'Vorname',
        'webseite'                   => 'Webseite',
        'weitere_vornamen'           => 'WeitereVornamen',
        'werdegaenge'                => 'Werdegaenge',
        'object_uuid'                => 'ObjectUuid',
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'adresse_hausnummer'         => 'setAdresseHausnummer',
        'adresse_land'               => 'setAdresseLand',
        'adresse_ort'                => 'setAdresseOrt',
        'adresse_plz'                => 'setAdressePlz',
        'adresse_strasse'            => 'setAdresseStrasse',
        'anrede'                     => 'setAnrede',
        'arbeitserlaubnis_bis'       => 'setArbeitserlaubnisBis',
        'aufenthaltserlaubnis_bis'   => 'setAufenthaltserlaubnisBis',
        'avatar'                     => 'setAvatar',
        'bevorzugter_kanal'          => 'setBevorzugterKanal',
        'bewerbungen'                => 'setBewerbungen',
        'dateien'                    => 'setDateien',
        'email'                      => 'setEmail',
        'familienstand'              => 'setFamilienstand',
        'fax'                        => 'setFax',
        'geburtsdatum'               => 'setGeburtsdatum',
        'geburtsname'                => 'setGeburtsname',
        'geburtsort'                 => 'setGeburtsort',
        'is_embargo_checked'         => 'setIsEmbargoChecked',
        'ist_ehemaliger_mitarbeiter' => 'setIstEhemaligerMitarbeiter',
        'ist_interner_mitarbeiter'   => 'setIstInternerMitarbeiter',
        'ist_pool_mitarbeiter'       => 'setIstPoolMitarbeiter',
        'kommunikationen'            => 'setKommunikationen',
        'mitarbeiter_status'         => 'setMitarbeiterStatus',
        'mobil'                      => 'setMobil',
        'nachname'                   => 'setNachname',
        'namensvorsatz'              => 'setNamensvorsatz',
        'namenszusatz'               => 'setNamenszusatz',
        'nationalitaet'              => 'setNationalitaet',
        'profile'                    => 'setProfile',
        'skills'                     => 'setSkills',
        'telefon'                    => 'setTelefon',
        'titel'                      => 'setTitel',
        'url_facebook'               => 'setUrlFacebook',
        'url_google_plus'            => 'setUrlGooglePlus',
        'url_linked_in'              => 'setUrlLinkedIn',
        'url_twitter'                => 'setUrlTwitter',
        'url_xing'                   => 'setUrlXing',
        'vorname'                    => 'setVorname',
        'webseite'                   => 'setWebseite',
        'weitere_vornamen'           => 'setWeitereVornamen',
        'werdegaenge'                => 'setWerdegaenge',
        'object_uuid'                => 'setObjectUuid',
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'adresse_hausnummer'         => 'getAdresseHausnummer',
        'adresse_land'               => 'getAdresseLand',
        'adresse_ort'                => 'getAdresseOrt',
        'adresse_plz'                => 'getAdressePlz',
        'adresse_strasse'            => 'getAdresseStrasse',
        'anrede'                     => 'getAnrede',
        'arbeitserlaubnis_bis'       => 'getArbeitserlaubnisBis',
        'aufenthaltserlaubnis_bis'   => 'getAufenthaltserlaubnisBis',
        'avatar'                     => 'getAvatar',
        'bevorzugter_kanal'          => 'getBevorzugterKanal',
        'bewerbungen'                => 'getBewerbungen',
        'dateien'                    => 'getDateien',
        'email'                      => 'getEmail',
        'familienstand'              => 'getFamilienstand',
        'fax'                        => 'getFax',
        'geburtsdatum'               => 'getGeburtsdatum',
        'geburtsname'                => 'getGeburtsname',
        'geburtsort'                 => 'getGeburtsort',
        'is_embargo_checked'         => 'getIsEmbargoChecked',
        'ist_ehemaliger_mitarbeiter' => 'getIstEhemaligerMitarbeiter',
        'ist_interner_mitarbeiter'   => 'getIstInternerMitarbeiter',
        'ist_pool_mitarbeiter'       => 'getIstPoolMitarbeiter',
        'kommunikationen'            => 'getKommunikationen',
        'mitarbeiter_status'         => 'getMitarbeiterStatus',
        'mobil'                      => 'getMobil',
        'nachname'                   => 'getNachname',
        'namensvorsatz'              => 'getNamensvorsatz',
        'namenszusatz'               => 'getNamenszusatz',
        'nationalitaet'              => 'getNationalitaet',
        'profile'                    => 'getProfile',
        'skills'                     => 'getSkills',
        'telefon'                    => 'getTelefon',
        'titel'                      => 'getTitel',
        'url_facebook'               => 'getUrlFacebook',
        'url_google_plus'            => 'getUrlGooglePlus',
        'url_linked_in'              => 'getUrlLinkedIn',
        'url_twitter'                => 'getUrlTwitter',
        'url_xing'                   => 'getUrlXing',
        'vorname'                    => 'getVorname',
        'webseite'                   => 'getWebseite',
        'weitere_vornamen'           => 'getWeitereVornamen',
        'werdegaenge'                => 'getWerdegaenge',
        'object_uuid'                => 'getObjectUuid',
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const MITARBEITER_STATUS_1 = 1;
    const MITARBEITER_STATUS_2 = 2;

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getMitarbeiterStatusAllowableValues()
    {
        return [
            self::MITARBEITER_STATUS_1,
            self::MITARBEITER_STATUS_2,
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['adresse_hausnummer'] = isset($data['adresse_hausnummer']) ? $data['adresse_hausnummer'] : null;
        $this->container['adresse_land'] = isset($data['adresse_land']) ? $data['adresse_land'] : null;
        $this->container['adresse_ort'] = isset($data['adresse_ort']) ? $data['adresse_ort'] : null;
        $this->container['adresse_plz'] = isset($data['adresse_plz']) ? $data['adresse_plz'] : null;
        $this->container['adresse_strasse'] = isset($data['adresse_strasse']) ? $data['adresse_strasse'] : null;
        $this->container['anrede'] = isset($data['anrede']) ? $data['anrede'] : null;
        $this->container['arbeitserlaubnis_bis'] = isset($data['arbeitserlaubnis_bis']) ? $data['arbeitserlaubnis_bis'] : null;
        $this->container['aufenthaltserlaubnis_bis'] = isset($data['aufenthaltserlaubnis_bis']) ? $data['aufenthaltserlaubnis_bis'] : null;
        $this->container['avatar'] = isset($data['avatar']) ? $data['avatar'] : null;
        $this->container['bevorzugter_kanal'] = isset($data['bevorzugter_kanal']) ? $data['bevorzugter_kanal'] : null;
        $this->container['bewerbungen'] = isset($data['bewerbungen']) ? $data['bewerbungen'] : null;
        $this->container['dateien'] = isset($data['dateien']) ? $data['dateien'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['familienstand'] = isset($data['familienstand']) ? $data['familienstand'] : null;
        $this->container['fax'] = isset($data['fax']) ? $data['fax'] : null;
        $this->container['geburtsdatum'] = isset($data['geburtsdatum']) ? $data['geburtsdatum'] : null;
        $this->container['geburtsname'] = isset($data['geburtsname']) ? $data['geburtsname'] : null;
        $this->container['geburtsort'] = isset($data['geburtsort']) ? $data['geburtsort'] : null;
        $this->container['is_embargo_checked'] = isset($data['is_embargo_checked']) ? $data['is_embargo_checked'] : null;
        $this->container['ist_ehemaliger_mitarbeiter'] = isset($data['ist_ehemaliger_mitarbeiter']) ? $data['ist_ehemaliger_mitarbeiter'] : null;
        $this->container['ist_interner_mitarbeiter'] = isset($data['ist_interner_mitarbeiter']) ? $data['ist_interner_mitarbeiter'] : null;
        $this->container['ist_pool_mitarbeiter'] = isset($data['ist_pool_mitarbeiter']) ? $data['ist_pool_mitarbeiter'] : null;
        $this->container['kommunikationen'] = isset($data['kommunikationen']) ? $data['kommunikationen'] : null;
        $this->container['mitarbeiter_status'] = isset($data['mitarbeiter_status']) ? $data['mitarbeiter_status'] : null;
        $this->container['mobil'] = isset($data['mobil']) ? $data['mobil'] : null;
        $this->container['nachname'] = isset($data['nachname']) ? $data['nachname'] : null;
        $this->container['namensvorsatz'] = isset($data['namensvorsatz']) ? $data['namensvorsatz'] : null;
        $this->container['namenszusatz'] = isset($data['namenszusatz']) ? $data['namenszusatz'] : null;
        $this->container['nationalitaet'] = isset($data['nationalitaet']) ? $data['nationalitaet'] : null;
        $this->container['profile'] = isset($data['profile']) ? $data['profile'] : null;
        $this->container['skills'] = isset($data['skills']) ? $data['skills'] : null;
        $this->container['telefon'] = isset($data['telefon']) ? $data['telefon'] : null;
        $this->container['titel'] = isset($data['titel']) ? $data['titel'] : null;
        $this->container['url_facebook'] = isset($data['url_facebook']) ? $data['url_facebook'] : null;
        $this->container['url_google_plus'] = isset($data['url_google_plus']) ? $data['url_google_plus'] : null;
        $this->container['url_linked_in'] = isset($data['url_linked_in']) ? $data['url_linked_in'] : null;
        $this->container['url_twitter'] = isset($data['url_twitter']) ? $data['url_twitter'] : null;
        $this->container['url_xing'] = isset($data['url_xing']) ? $data['url_xing'] : null;
        $this->container['vorname'] = isset($data['vorname']) ? $data['vorname'] : null;
        $this->container['webseite'] = isset($data['webseite']) ? $data['webseite'] : null;
        $this->container['weitere_vornamen'] = isset($data['weitere_vornamen']) ? $data['weitere_vornamen'] : null;
        $this->container['werdegaenge'] = isset($data['werdegaenge']) ? $data['werdegaenge'] : null;
        $this->container['object_uuid'] = isset($data['object_uuid']) ? $data['object_uuid'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getMitarbeiterStatusAllowableValues();
        if (!in_array($this->container['mitarbeiter_status'], $allowedValues)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'mitarbeiter_status', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        $allowedValues = $this->getMitarbeiterStatusAllowableValues();
        if (!in_array($this->container['mitarbeiter_status'], $allowedValues)) {
            return false;
        }
        return true;
    }

    /**
     * Gets adresse_hausnummer
     *
     * @return string
     */
    public function getAdresseHausnummer()
    {
        return $this->container['adresse_hausnummer'];
    }

    /**
     * Sets adresse_hausnummer
     *
     * @param string $adresse_hausnummer Holt oder setzt die Hausnummer.
     *
     * @return $this
     */
    public function setAdresseHausnummer($adresse_hausnummer)
    {
        $this->container['adresse_hausnummer'] = $adresse_hausnummer;

        return $this;
    }

    /**
     * Gets adresse_land
     *
     * @return \Prosoft\RecruitingApi\Api\Dto\LookupDto
     */
    public function getAdresseLand()
    {
        return $this->container['adresse_land'];
    }

    /**
     * Sets adresse_land
     *
     * @param \Prosoft\RecruitingApi\Api\Dto\LookupDto $adresse_land adresse_land
     *
     * @return $this
     */
    public function setAdresseLand($adresse_land)
    {
        $this->container['adresse_land'] = $adresse_land;

        return $this;
    }

    /**
     * Gets adresse_ort
     *
     * @return string
     */
    public function getAdresseOrt()
    {
        return $this->container['adresse_ort'];
    }

    /**
     * Sets adresse_ort
     *
     * @param string $adresse_ort Holt oder setzt den Ort.
     *
     * @return $this
     */
    public function setAdresseOrt($adresse_ort)
    {
        $this->container['adresse_ort'] = $adresse_ort;

        return $this;
    }

    /**
     * Gets adresse_plz
     *
     * @return string
     */
    public function getAdressePlz()
    {
        return $this->container['adresse_plz'];
    }

    /**
     * Sets adresse_plz
     *
     * @param string $adresse_plz Holt oder setzt die PLZ.
     *
     * @return $this
     */
    public function setAdressePlz($adresse_plz)
    {
        $this->container['adresse_plz'] = $adresse_plz;

        return $this;
    }

    /**
     * Gets adresse_strasse
     *
     * @return string
     */
    public function getAdresseStrasse()
    {
        return $this->container['adresse_strasse'];
    }

    /**
     * Sets adresse_strasse
     *
     * @param string $adresse_strasse Holt oder setzt die StraÃe.
     *
     * @return $this
     */
    public function setAdresseStrasse($adresse_strasse)
    {
        $this->container['adresse_strasse'] = $adresse_strasse;

        return $this;
    }

    /**
     * Gets anrede
     *
     * @return \Prosoft\RecruitingApi\Api\Dto\LookupDto
     */
    public function getAnrede()
    {
        return $this->container['anrede'];
    }

    /**
     * Sets anrede
     *
     * @param \Prosoft\RecruitingApi\Api\Dto\LookupDto $anrede anrede
     *
     * @return $this
     */
    public function setAnrede($anrede)
    {
        $this->container['anrede'] = $anrede;

        return $this;
    }

    /**
     * Gets arbeitserlaubnis_bis
     *
     * @return \DateTime
     */
    public function getArbeitserlaubnisBis()
    {
        return $this->container['arbeitserlaubnis_bis'];
    }

    /**
     * Sets arbeitserlaubnis_bis
     *
     * @param \DateTime $arbeitserlaubnis_bis Holt oder setzt das Datum wann die Arbeitserlaubnis endet.
     *
     * @return $this
     */
    public function setArbeitserlaubnisBis($arbeitserlaubnis_bis)
    {
        $this->container['arbeitserlaubnis_bis'] = $arbeitserlaubnis_bis;

        return $this;
    }

    /**
     * Gets aufenthaltserlaubnis_bis
     *
     * @return \DateTime
     */
    public function getAufenthaltserlaubnisBis()
    {
        return $this->container['aufenthaltserlaubnis_bis'];
    }

    /**
     * Sets aufenthaltserlaubnis_bis
     *
     * @param \DateTime $aufenthaltserlaubnis_bis Holt oder setzt das Datum wann die Aufenthaltserlaubnis endet.
     *
     * @return $this
     */
    public function setAufenthaltserlaubnisBis($aufenthaltserlaubnis_bis)
    {
        $this->container['aufenthaltserlaubnis_bis'] = $aufenthaltserlaubnis_bis;

        return $this;
    }

    /**
     * Gets avatar
     *
     * @return \Prosoft\RecruitingApi\Api\Dto\AvatarReadOnlyDto
     */
    public function getAvatar()
    {
        return $this->container['avatar'];
    }

    /**
     * Sets avatar
     *
     * @param \Prosoft\RecruitingApi\Api\Dto\AvatarReadOnlyDto $avatar avatar
     *
     * @return $this
     */
    public function setAvatar($avatar)
    {
        $this->container['avatar'] = $avatar;

        return $this;
    }

    /**
     * Gets bevorzugter_kanal
     *
     * @return \Prosoft\RecruitingApi\Api\Dto\LookupDto
     */
    public function getBevorzugterKanal()
    {
        return $this->container['bevorzugter_kanal'];
    }

    /**
     * Sets bevorzugter_kanal
     *
     * @param \Prosoft\RecruitingApi\Api\Dto\LookupDto $bevorzugter_kanal bevorzugter_kanal
     *
     * @return $this
     */
    public function setBevorzugterKanal($bevorzugter_kanal)
    {
        $this->container['bevorzugter_kanal'] = $bevorzugter_kanal;

        return $this;
    }

    /**
     * Gets bewerbungen
     *
     * @return \Prosoft\RecruitingApi\Api\Dto\BewerbungReadOnlyDto[]
     */
    public function getBewerbungen()
    {
        return $this->container['bewerbungen'];
    }

    /**
     * Sets bewerbungen
     *
     * @param \Prosoft\RecruitingApi\Api\Dto\BewerbungReadOnlyDto[] $bewerbungen Holt oder setzt die Bewerbungen
     *
     * @return $this
     */
    public function setBewerbungen($bewerbungen)
    {
        $this->container['bewerbungen'] = $bewerbungen;

        return $this;
    }

    /**
     * Gets dateien
     *
     * @return \Prosoft\RecruitingApi\Api\Dto\MitarbeiterDateiReadOnlyDto[]
     */
    public function getDateien()
    {
        return $this->container['dateien'];
    }

    /**
     * Sets dateien
     *
     * @param \Prosoft\RecruitingApi\Api\Dto\MitarbeiterDateiReadOnlyDto[] $dateien Holt oder setzt die Dateien des
     *                                                                             Mitarbeiters
     *
     * @return $this
     */
    public function setDateien($dateien)
    {
        $this->container['dateien'] = $dateien;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string $email Holt oder setzt die E-Mail-Adresse.
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets familienstand
     *
     * @return \Prosoft\RecruitingApi\Api\Dto\LookupDto
     */
    public function getFamilienstand()
    {
        return $this->container['familienstand'];
    }

    /**
     * Sets familienstand
     *
     * @param \Prosoft\RecruitingApi\Api\Dto\LookupDto $familienstand familienstand
     *
     * @return $this
     */
    public function setFamilienstand($familienstand)
    {
        $this->container['familienstand'] = $familienstand;

        return $this;
    }

    /**
     * Gets fax
     *
     * @return string
     */
    public function getFax()
    {
        return $this->container['fax'];
    }

    /**
     * Sets fax
     *
     * @param string $fax Holt oder setzt die FAX-Nummer.
     *
     * @return $this
     */
    public function setFax($fax)
    {
        $this->container['fax'] = $fax;

        return $this;
    }

    /**
     * Gets geburtsdatum
     *
     * @return \DateTime
     */
    public function getGeburtsdatum()
    {
        return $this->container['geburtsdatum'];
    }

    /**
     * Sets geburtsdatum
     *
     * @param \DateTime $geburtsdatum Holt oder setzt das Geburtsdatum.
     *
     * @return $this
     */
    public function setGeburtsdatum($geburtsdatum)
    {
        $this->container['geburtsdatum'] = $geburtsdatum;

        return $this;
    }

    /**
     * Gets geburtsname
     *
     * @return string
     */
    public function getGeburtsname()
    {
        return $this->container['geburtsname'];
    }

    /**
     * Sets geburtsname
     *
     * @param string $geburtsname Holt oder setzt den Geburtsnamen.
     *
     * @return $this
     */
    public function setGeburtsname($geburtsname)
    {
        $this->container['geburtsname'] = $geburtsname;

        return $this;
    }

    /**
     * Gets geburtsort
     *
     * @return string
     */
    public function getGeburtsort()
    {
        return $this->container['geburtsort'];
    }

    /**
     * Sets geburtsort
     *
     * @param string $geburtsort Holt oder setzt den Geburtsort.
     *
     * @return $this
     */
    public function setGeburtsort($geburtsort)
    {
        $this->container['geburtsort'] = $geburtsort;

        return $this;
    }

    /**
     * Gets is_embargo_checked
     *
     * @return bool
     */
    public function getIsEmbargoChecked()
    {
        return $this->container['is_embargo_checked'];
    }

    /**
     * Sets is_embargo_checked
     *
     * @param bool $is_embargo_checked Holt oder setzt einen Wert, der angibt, ob der Mitarbeiter bereits auf Embargos
     *                                 geprÃ¼ft wurde.
     *
     * @return $this
     */
    public function setIsEmbargoChecked($is_embargo_checked)
    {
        $this->container['is_embargo_checked'] = $is_embargo_checked;

        return $this;
    }

    /**
     * Gets ist_ehemaliger_mitarbeiter
     *
     * @return bool
     */
    public function getIstEhemaligerMitarbeiter()
    {
        return $this->container['ist_ehemaliger_mitarbeiter'];
    }

    /**
     * Sets ist_ehemaliger_mitarbeiter
     *
     * @param bool $ist_ehemaliger_mitarbeiter Holt oder setzt eine Wert, der angibt, ob es sich um einen ehemaligen
     *                                         Mitarbeiter handelt.
     *
     * @return $this
     */
    public function setIstEhemaligerMitarbeiter($ist_ehemaliger_mitarbeiter)
    {
        $this->container['ist_ehemaliger_mitarbeiter'] = $ist_ehemaliger_mitarbeiter;

        return $this;
    }

    /**
     * Gets ist_interner_mitarbeiter
     *
     * @return bool
     */
    public function getIstInternerMitarbeiter()
    {
        return $this->container['ist_interner_mitarbeiter'];
    }

    /**
     * Sets ist_interner_mitarbeiter
     *
     * @param bool $ist_interner_mitarbeiter Holt oder setzt einen Wert, der angibt, ob der Mitarbeiter ein Interner
     *                                       Mitarbeiter ist.
     *
     * @return $this
     */
    public function setIstInternerMitarbeiter($ist_interner_mitarbeiter)
    {
        $this->container['ist_interner_mitarbeiter'] = $ist_interner_mitarbeiter;

        return $this;
    }

    /**
     * Gets ist_pool_mitarbeiter
     *
     * @return bool
     */
    public function getIstPoolMitarbeiter()
    {
        return $this->container['ist_pool_mitarbeiter'];
    }

    /**
     * Sets ist_pool_mitarbeiter
     *
     * @param bool $ist_pool_mitarbeiter Holt oder setzt einen Wert, der angibt, ob der Mitarbeiter im Mitarbeiter-Pool
     *                                   enthalten ist.
     *
     * @return $this
     */
    public function setIstPoolMitarbeiter($ist_pool_mitarbeiter)
    {
        $this->container['ist_pool_mitarbeiter'] = $ist_pool_mitarbeiter;

        return $this;
    }

    /**
     * Gets kommunikationen
     *
     * @return \Prosoft\RecruitingApi\Api\Dto\KommunikationReadOnlyDto[]
     */
    public function getKommunikationen()
    {
        return $this->container['kommunikationen'];
    }

    /**
     * Sets kommunikationen
     *
     * @param \Prosoft\RecruitingApi\Api\Dto\KommunikationReadOnlyDto[] $kommunikationen Holt oder setzt die
     *                                                                                  Kommunikationen
     *
     * @return $this
     */
    public function setKommunikationen($kommunikationen)
    {
        $this->container['kommunikationen'] = $kommunikationen;

        return $this;
    }

    /**
     * Gets mitarbeiter_status
     *
     * @return int
     */
    public function getMitarbeiterStatus()
    {
        return $this->container['mitarbeiter_status'];
    }

    /**
     * Sets mitarbeiter_status
     *
     * @param int $mitarbeiter_status Holt oder setzt den MitarbeiterStatus.
     *
     * @return $this
     */
    public function setMitarbeiterStatus($mitarbeiter_status)
    {
        $allowedValues = $this->getMitarbeiterStatusAllowableValues();
        if (!is_null($mitarbeiter_status) && !in_array($mitarbeiter_status, $allowedValues)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'mitarbeiter_status', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['mitarbeiter_status'] = $mitarbeiter_status;

        return $this;
    }

    /**
     * Gets mobil
     *
     * @return string
     */
    public function getMobil()
    {
        return $this->container['mobil'];
    }

    /**
     * Sets mobil
     *
     * @param string $mobil Holt oder setzt die Mobilfunknummer.
     *
     * @return $this
     */
    public function setMobil($mobil)
    {
        $this->container['mobil'] = $mobil;

        return $this;
    }

    /**
     * Gets nachname
     *
     * @return string
     */
    public function getNachname()
    {
        return $this->container['nachname'];
    }

    /**
     * Sets nachname
     *
     * @param string $nachname Holt oder setzt den Nachnamen.
     *
     * @return $this
     */
    public function setNachname($nachname)
    {
        $this->container['nachname'] = $nachname;

        return $this;
    }

    /**
     * Gets namensvorsatz
     *
     * @return string
     */
    public function getNamensvorsatz()
    {
        return $this->container['namensvorsatz'];
    }

    /**
     * Sets namensvorsatz
     *
     * @param string $namensvorsatz Holt oder setzt den Namensvorsatz.
     *
     * @return $this
     */
    public function setNamensvorsatz($namensvorsatz)
    {
        $this->container['namensvorsatz'] = $namensvorsatz;

        return $this;
    }

    /**
     * Gets namenszusatz
     *
     * @return string
     */
    public function getNamenszusatz()
    {
        return $this->container['namenszusatz'];
    }

    /**
     * Sets namenszusatz
     *
     * @param string $namenszusatz Holt oder setzt den Namenszusatz.
     *
     * @return $this
     */
    public function setNamenszusatz($namenszusatz)
    {
        $this->container['namenszusatz'] = $namenszusatz;

        return $this;
    }

    /**
     * Gets nationalitaet
     *
     * @return \Prosoft\RecruitingApi\Api\Dto\LookupDto
     */
    public function getNationalitaet()
    {
        return $this->container['nationalitaet'];
    }

    /**
     * Sets nationalitaet
     *
     * @param \Prosoft\RecruitingApi\Api\Dto\LookupDto $nationalitaet nationalitaet
     *
     * @return $this
     */
    public function setNationalitaet($nationalitaet)
    {
        $this->container['nationalitaet'] = $nationalitaet;

        return $this;
    }

    /**
     * Gets profile
     *
     * @return \Prosoft\RecruitingApi\Api\Dto\MitarbeiterProfilReadOnlyDto[]
     */
    public function getProfile()
    {
        return $this->container['profile'];
    }

    /**
     * Sets profile
     *
     * @param \Prosoft\RecruitingApi\Api\Dto\MitarbeiterProfilReadOnlyDto[] $profile Holt oder setzt die gespeicherten
     *                                                                              Profile
     *
     * @return $this
     */
    public function setProfile($profile)
    {
        $this->container['profile'] = $profile;

        return $this;
    }

    /**
     * Gets skills
     *
     * @return \Prosoft\RecruitingApi\Api\Dto\MitarbeiterSkillReadOnlyDto[]
     */
    public function getSkills()
    {
        return $this->container['skills'];
    }

    /**
     * Sets skills
     *
     * @param \Prosoft\RecruitingApi\Api\Dto\MitarbeiterSkillReadOnlyDto[] $skills Holt oder setzt die Skills
     *
     * @return $this
     */
    public function setSkills($skills)
    {
        $this->container['skills'] = $skills;

        return $this;
    }

    /**
     * Gets telefon
     *
     * @return string
     */
    public function getTelefon()
    {
        return $this->container['telefon'];
    }

    /**
     * Sets telefon
     *
     * @param string $telefon Holt oder setzt die Telefonnummer.
     *
     * @return $this
     */
    public function setTelefon($telefon)
    {
        $this->container['telefon'] = $telefon;

        return $this;
    }

    /**
     * Gets titel
     *
     * @return \Prosoft\RecruitingApi\Api\Dto\LookupDto
     */
    public function getTitel()
    {
        return $this->container['titel'];
    }

    /**
     * Sets titel
     *
     * @param \Prosoft\RecruitingApi\Api\Dto\LookupDto $titel titel
     *
     * @return $this
     */
    public function setTitel($titel)
    {
        $this->container['titel'] = $titel;

        return $this;
    }

    /**
     * Gets url_facebook
     *
     * @return string
     */
    public function getUrlFacebook()
    {
        return $this->container['url_facebook'];
    }

    /**
     * Sets url_facebook
     *
     * @param string $url_facebook Holt oder setzt die Facebook-URL.
     *
     * @return $this
     */
    public function setUrlFacebook($url_facebook)
    {
        $this->container['url_facebook'] = $url_facebook;

        return $this;
    }

    /**
     * Gets url_google_plus
     *
     * @return string
     */
    public function getUrlGooglePlus()
    {
        return $this->container['url_google_plus'];
    }

    /**
     * Sets url_google_plus
     *
     * @param string $url_google_plus Holt oder setzt die GooglePlus-URL.
     *
     * @return $this
     */
    public function setUrlGooglePlus($url_google_plus)
    {
        $this->container['url_google_plus'] = $url_google_plus;

        return $this;
    }

    /**
     * Gets url_linked_in
     *
     * @return string
     */
    public function getUrlLinkedIn()
    {
        return $this->container['url_linked_in'];
    }

    /**
     * Sets url_linked_in
     *
     * @param string $url_linked_in Holt oder setzt die LinkedIn-URL.
     *
     * @return $this
     */
    public function setUrlLinkedIn($url_linked_in)
    {
        $this->container['url_linked_in'] = $url_linked_in;

        return $this;
    }

    /**
     * Gets url_twitter
     *
     * @return string
     */
    public function getUrlTwitter()
    {
        return $this->container['url_twitter'];
    }

    /**
     * Sets url_twitter
     *
     * @param string $url_twitter Holt oder setzt die Twitter-URL.
     *
     * @return $this
     */
    public function setUrlTwitter($url_twitter)
    {
        $this->container['url_twitter'] = $url_twitter;

        return $this;
    }

    /**
     * Gets url_xing
     *
     * @return string
     */
    public function getUrlXing()
    {
        return $this->container['url_xing'];
    }

    /**
     * Sets url_xing
     *
     * @param string $url_xing Holt oder setzt die XING-URL.
     *
     * @return $this
     */
    public function setUrlXing($url_xing)
    {
        $this->container['url_xing'] = $url_xing;

        return $this;
    }

    /**
     * Gets vorname
     *
     * @return string
     */
    public function getVorname()
    {
        return $this->container['vorname'];
    }

    /**
     * Sets vorname
     *
     * @param string $vorname Holt oder setzt den Vornamen.
     *
     * @return $this
     */
    public function setVorname($vorname)
    {
        $this->container['vorname'] = $vorname;

        return $this;
    }

    /**
     * Gets webseite
     *
     * @return string
     */
    public function getWebseite()
    {
        return $this->container['webseite'];
    }

    /**
     * Sets webseite
     *
     * @param string $webseite Holt oder setzt die URL zur Website.
     *
     * @return $this
     */
    public function setWebseite($webseite)
    {
        $this->container['webseite'] = $webseite;

        return $this;
    }

    /**
     * Gets weitere_vornamen
     *
     * @return string
     */
    public function getWeitereVornamen()
    {
        return $this->container['weitere_vornamen'];
    }

    /**
     * Sets weitere_vornamen
     *
     * @param string $weitere_vornamen Holt oder setzt weitere Vornamen.
     *
     * @return $this
     */
    public function setWeitereVornamen($weitere_vornamen)
    {
        $this->container['weitere_vornamen'] = $weitere_vornamen;

        return $this;
    }

    /**
     * Gets werdegaenge
     *
     * @return \Prosoft\RecruitingApi\Api\Dto\MitarbeiterWerdegangReadOnlyDto[]
     */
    public function getWerdegaenge()
    {
        return $this->container['werdegaenge'];
    }

    /**
     * Sets werdegaenge
     *
     * @param \Prosoft\RecruitingApi\Api\Dto\MitarbeiterWerdegangReadOnlyDto[] $werdegaenge Holt oder setzt die
     *                                                                                     Werdegang-Elemente
     *
     * @return $this
     */
    public function setWerdegaenge($werdegaenge)
    {
        $this->container['werdegaenge'] = $werdegaenge;

        return $this;
    }

    /**
     * Gets object_uuid
     *
     * @return string
     */
    public function getObjectUuid()
    {
        return $this->container['object_uuid'];
    }

    /**
     * Sets object_uuid
     *
     * @param string $object_uuid Die Object-Uuid
     *
     * @return $this
     */
    public function setObjectUuid($object_uuid)
    {
        $this->container['object_uuid'] = $object_uuid;

        return $this;
    }

    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param int $offset Offset
     *
     * @return bool
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param int $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int   $offset Offset
     * @param mixed $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param int $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
